---
title: Three point example
author: Jono Tuke
date: today
date-format: long
format: 
  html: 
    self-contained: true
    df-print: tibble
editor_options: 
  chunk_output_type: console
execute: 
  warning: false
  message: false
---

# Get libs

```{r, setup}
pacman::p_load(tidyverse)
fs::dir_ls(here::here("r-code")) |> walk(source)
Rcpp::sourceCpp(here::here("c-code", "get_dist.cpp"))
```

# Set up points

```{r}
x <- tibble(
  x1 = c(0,1,0),
  x2 = c(0,0,1)
)
a <- tibble(
  a1 = c(0.1, 0, -0.1),
  a2 = c(0.1, 0, -0.1)
)
```

Calculate Y.

```{r}
y <- tibble(
  y1 = 1 + 1 * x$x1 + a$a1,
  y2 = 1 + 1 * x$x2 + a$a2
)
y
```

So we have the distances between the x points and also those computed by the linear transform of the x to give the y points.

```{r}
Dij <- cpp_get_dist(x$x1, x$x2)
Dij
Gij <- cpp_get_dist(y$y1, y$y2)
Gij
```

Now, we will compare this to the model

$$
\boldsymbol{G} = X\boldsymbol{\beta} + Z\boldsymbol{b} + \boldsymbol{\varepsilon}
$$

So we have

```{r}
Z <- get_Z(x)
Z
b <- a |> list_c()
b
Dij * 1 + Z %*% b
```

So the approximation works well.
