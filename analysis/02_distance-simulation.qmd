---
title: Simulation to check distance approximation
author: Jono Tuke
date: today
date-format: long
format: 
  html: 
    self-contained: true
    df-print: tibble
editor_options: 
  chunk_output_type: console
execute: 
  warning: false
  message: false
---

```{r, setup}
pacman::p_load(tidyverse)
theme_set(theme_bw())
```

# Outline

We have two possible ways to get the distances between the $y_i$ points. In the first way, we translate the $x_i$ points with noise: $a_i$, and then calculate the distances between the $x_i$, denoted $D_{ij}$ and then the distances between the $y_i$, denoted $G_{ij}$. In the second method, we use the mixed effects model:

$$
LMG_{ij} = \E[G_{ij}] = \beta D_{ij} + Z\boldsymbol{a}, 
$$

that is based on the Taylor series expansion.

We will simulate both methods and compare the results. For the simulations we consider the following parameters

$$
X_i \sim U(0,1) \times U(0,1), 
$$

$$
\beta = 1, 
$$
$$
a_i \sim N_2(\boldsymbol{0}, \Sigma)
$$

where

$$
\Sigma = 
\begin{bmatrix}
\sigma^2_a & 0\\
0 & \sigma^2_a
\end{bmatrix}
$$

## Example simulation

To illustrate, we have a single simulation which is plotted in @fig-sim-sp. The blue points are the simulated $X$ points, while the brown points are the simulated $Y$ points. As $\beta = 1$, we are just observing the noise added by the $\boldsymbol{a}$ terms. 

```{r}
fs::dir_ls(here::here('r-code')) |> walk(source)
fs::dir_ls(here::here('c-code')) |> walk(Rcpp::sourceCpp)
set.seed(2023)
sims <- simulate_distances(n_pts = 100, sigma_b = 0.1, beta = 1)
glimpse(sims)
```

For this simulation, we compare the two distance measures between the $y_i$ points (@fig-gij-sp). We see that for large values of $D_{ij}$ we see a strong correlation between the LMGij and Gij, but for small values of D_{ij}$ we see that the $a_i$ term dominates leading to a lack of correlation, and also the possibility of negative distances in LMGij. 

```{r}
#| fig-cap: Scatterplot of points before and after translation. 
#| label: fig-sim-sp
sims$X |> as_tibble() |>
  bind_cols(sims$Y) |>
  ggplot(aes(X1, X2)) +
  geom_point(aes(fill = "X"), pch = 21) +
  geom_point(aes(Y1, Y2, fill = "Y"), pch = 21) +
  geom_segment(aes(x = X1, xend = Y1, y = X2, yend = Y2)) + 
  harrypotter::scale_fill_hp_d("Ravenclaw")
```

```{r}
#| fig-cap: Scatterplot of LMGij compared to Gij. 
#| label: fig-gij-sp
tibble(
  Gij = sims$Gij,
  LMGij = sims$LMGij,
  Dij = sims$Dij
) |>
  ggplot(aes(Gij, LMGij, col = cut(Dij, breaks = c(0, 1/3*sqrt(2), 2/3*sqrt(2), sqrt(2))))) +
  geom_point() + 
  labs(col = "Dij") + 
  harrypotter::scale_colour_hp_d("Ravenclaw")
```

```{r}
sim_correlations <- read_rds(
  here::here("data", "sim_correlations.rds")
)
```

```{r}
#| fig-cap: Correlation between gij and lmgij for given ratio of standard deviation of noise term compared to points
#| label: fig-corr-sp
sim_correlations |>
  group_by(sigma_b) |>
  summarise(
    mean = mean(r),
    lwr = quantile(r, 0.1),
    upr = quantile(r, 0.9)
    ) |>
  ggplot(aes(sigma_b/sqrt(1/12), mean)) +
  geom_point() +
  geom_errorbar(aes(ymin = lwr, ymax = upr)) +
  scale_x_continuous(breaks = 0:10) +
  labs(x = expression(sigma[b]/sigma[x]))

```



