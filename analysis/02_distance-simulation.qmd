---
title: Simulation to check distance approximation
author: Jono Tuke
date: today
date-format: long
format: 
  html: 
    self-contained: true
    df-print: tibble
editor_options: 
  chunk_output_type: console
execute: 
  warning: false
  message: false
---

```{r, setup}
pacman::p_load(tidyverse)
theme_set(theme_bw())
```

# Outline

We have two possible ways to get the distances between the $y_i$ points. In the first way, we translate the $x_i$ points with noise: $a_i$, and then calculate the distances between the $x_i$, denoted $D_{ij}$ and then the distances between the $y_i$, denoted $G_{ij}$. In the second method, we use the mixed effects model:

$$
\hat{G}_{ij} = \E[G_{ij}] = \beta D_{ij} + Z\boldsymbol{a}, 
$$

that is based on the Taylor series expansion.

We will simulate both methods and compare the results. For the simulations we consider the following parameters

$$
X_i \sim U(0,10) \times U(0,10), 
$$

$$
\beta = 1, 
$$
$$
a_i \sim N_2(\boldsymbol{0}, \Sigma)
$$

where

$$
\Sigma = 
\begin{bmatrix}
\sigma^2_a & 0\\
0 & \sigma^2_a
\end{bmatrix}
$$
## Example simulation

To illustrate, we have a single simulation which is plotted in @fig-sim-sp. The blue points are the simulated $X$ points, while the brown points are the simulated $Y$ points. As $\beta = 1$, we are just observing the noise added by the $\boldsymbol{a}$ terms. 

```{r}
fs::dir_ls(here::here('r-code')) |> walk(source)
set.seed(2023)
sims <- simulate_distances(n_pts = 100, sigma_b = 1, beta = 1)
```


```{r}
#| fig-cap: Scatterplot of points before and after translation. 
#| label: fig-sim-sp
sims$pts |>
  ggplot(aes(X1, X2)) +
  geom_point(aes(fill = "X"), pch = 21) +
  geom_point(aes(Y1, Y2, fill = "Y"), pch = 21) +
  geom_segment(aes(x = X1, xend = Y1, y = X2, yend = Y2)) + 
  harrypotter::scale_fill_hp_d("Ravenclaw")
```

```{r}
sims$dist |> 
  ggplot(aes(Dij, Gij_hat, col = Dij)) + 
  geom_point()
```



